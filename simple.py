#!/usr/bin/env python

'''
This blueprint was generated by tosca.py on 2016-04-26 21:57:24.438286.
'''

import tosca.blueprint

try:
    ctx
except NameError:
    ctx = tosca.blueprint.Context()

ctx.description = 'This Blueprint installs the nodecellar application on an existing host.\n'

# Imports
ctx.imports.append(tosca.blueprint.Import(url='http://www.getcloudify.org/spec/cloudify/3.4m4/types.yaml'))
ctx.imports.append(tosca.blueprint.Import(url='http://www.getcloudify.org/spec/diamond-plugin/1.3.2/plugin.yaml'))
ctx.imports.append(tosca.blueprint.Import(url='types/nodecellar.yaml'))
ctx.imports.append(tosca.blueprint.Import(url='types/simple-types.yaml'))

#
# Inputs
#

# agent_private_key_path
input = ctx.input['agent_private_key_path'] = tosca.blueprint.Input(description='Path to a private key that resided on the management machine. SSH-ing into agent machines will be done with this key.\n')

# agent_user
input = ctx.input['agent_user'] = tosca.blueprint.Input(description='User name used when SSH-ing into the started machine\n')

# host_ip
input = ctx.input['host_ip'] = tosca.blueprint.Input(description='The ip of the host the application will be deployed on\n')

#
# Outputs
#

# endpoint
output = ctx.output['endpoint'] = tosca.blueprint.Output(description='Web application endpoint')
output.value['ip_address'] = tosca.blueprint.MethodValue(None, 'get_property', ['host', 'ip'])
output.value['port'] = tosca.blueprint.MethodValue(None, 'get_property', ['nodecellar', 'port'])

#
# Node templates
#

# mongod
node_template = ctx.node_template['mongod'] = tosca.blueprint.NodeTemplate(type='nodecellar.nodes.MonitoredMongoDatabase')
relationship = tosca.blueprint.Relationship(type='cloudify.relationships.contained_in')
node_template.relationships.append(relationship)
relationship.target = 'host'

# nodecellar
node_template = ctx.node_template['nodecellar'] = tosca.blueprint.NodeTemplate(type='nodecellar.nodes.NodecellarApplicationModule')
relationship = tosca.blueprint.Relationship(type='node_connected_to_mongo')
node_template.relationships.append(relationship)
relationship.target = 'mongod'
relationship.target_interface['cloudify.interfaces.relationship_lifecycle'] = {'postconfigure': {'inputs': {'mongo_ip_address': 'localhost'}}}
relationship = tosca.blueprint.Relationship(type='node_contained_in_nodejs')
node_template.relationships.append(relationship)
relationship.target = 'nodejs'

# host
node_template = ctx.node_template['host'] = tosca.blueprint.NodeTemplate(type='nodecellar.nodes.MonitoredServer')
relationship.property['ip'] = tosca.blueprint.MethodValue(None, 'get_input', 'host_ip')
relationship.property['cloudify_agent'] = tosca.blueprint.MethodValue(None, 'user', {'get_input': 'agent_user'})

# nodejs
node_template = ctx.node_template['nodejs'] = tosca.blueprint.NodeTemplate(type='nodecellar.nodes.NodeJSServer')
relationship = tosca.blueprint.Relationship(type='cloudify.relationships.contained_in')
node_template.relationships.append(relationship)
relationship.target = 'host'
